# Pulse @PULSE_GEN_NUM@ control register.

# Polling the pulse generator output state does not make sense because it will
# typically change at a high rate. Applications that want to get the current
# output state should trigger processing of the record explicitly.
record(bi, "$(P)$(R)PulseGen@PULSE_GEN_NUM@:Status") {
  field(DESC, "Pulse gen. @PULSE_GEN_NUM@ output status?")
  field(DTYP, "MRF Memory")
  field(INP,  "@$(DEVICE) @PULSE_GEN_CTRL_ADDR@[7] uint32")
  field(ZNAM, "Low")
  field(ONAM, "High")
}

record(bo, "$(P)$(R)PulseGen@PULSE_GEN_NUM@:Set") {
  field(DESC, "Set pulse gen. @PULSE_GEN_NUM@")
  field(ZNAM, "Set")
  field(ONAM, "Set")
  field(FLNK, "$(P)$(R)Intrnl:PulseGen@PULSE_GEN_NUM@:Set")
}

record(bo, "$(P)$(R)Intrnl:PulseGen@PULSE_GEN_NUM@:Set") {
  field(DTYP, "MRF Memory")
  field(OUT,  "@$(DEVICE) @PULSE_GEN_CTRL_ADDR@[6] uint32 no_verify")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)$(R)Intrnl:True")
  field(ZNAM, "Set")
  field(ONAM, "No set")
}

record(bo, "$(P)$(R)PulseGen@PULSE_GEN_NUM@:Reset") {
  field(DESC, "Reset pulse gen. @PULSE_GEN_NUM@")
  field(ZNAM, "Reset")
  field(ONAM, "Reset")
  field(FLNK, "$(P)$(R)Intrnl:PulseGen@PULSE_GEN_NUM@:Reset")
}

record(bo, "$(P)$(R)Intrnl:PulseGen@PULSE_GEN_NUM@:Reset") {
  field(DTYP, "MRF Memory")
  field(OUT,  "@$(DEVICE) @PULSE_GEN_CTRL_ADDR@[5] uint32 no_verify")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)$(R)Intrnl:True")
  field(ZNAM, "Reset")
  field(ONAM, "No reset")
}

record(bo, "$(P)$(R)PulseGen@PULSE_GEN_NUM@:Polarity") {
  field(DESC, "Pulse gen. @PULSE_GEN_NUM@ output polarity")
  field(DTYP, "MRF Memory")
  field(OUT,  "@$(DEVICE) @PULSE_GEN_CTRL_ADDR@[4] uint32")
  field(ZNAM, "Normal")
  field(ONAM, "Inverted")
}

record(bo, "$(P)$(R)PulseGen@PULSE_GEN_NUM@:MapResetEnabled") {
  field(DESC, "Enable pulse gen. @PULSE_GEN_NUM@ reset mapping?")
  field(DTYP, "MRF Memory")
  field(OUT,  "@$(DEVICE) @PULSE_GEN_CTRL_ADDR@[3] uint32")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(bo, "$(P)$(R)PulseGen@PULSE_GEN_NUM@:MapSetEnabled") {
  field(DESC, "Enable pulse gen. @PULSE_GEN_NUM@ set mapping?")
  field(DTYP, "MRF Memory")
  field(OUT,  "@$(DEVICE) @PULSE_GEN_CTRL_ADDR@[2] uint32")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(bo, "$(P)$(R)PulseGen@PULSE_GEN_NUM@:MapTrigEnabled") {
  field(DESC, "Enable pulse gen. @PULSE_GEN_NUM@ trigger mapping?")
  field(DTYP, "MRF Memory")
  field(OUT,  "@$(DEVICE) @PULSE_GEN_CTRL_ADDR@[1] uint32")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(bo, "$(P)$(R)PulseGen@PULSE_GEN_NUM@:Enabled") {
  field(DESC, "Enable pulse generator @PULSE_GEN_NUM@?")
  field(DTYP, "MRF Memory")
  field(OUT,  "@$(DEVICE) @PULSE_GEN_CTRL_ADDR@[0] uint32")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(fanout, "$(P)$(R)Intrnl:WriteAll:PulseGen@PULSE_GEN_NUM@:Generic") {
  field(LNK1, "$(P)$(R)PulseGen@PULSE_GEN_NUM@:Enabled")
  field(LNK2, "$(P)$(R)PulseGen@PULSE_GEN_NUM@:MapResetEnabled")
  field(LNK3, "$(P)$(R)PulseGen@PULSE_GEN_NUM@:MapSetEnabled")
  field(LNK4, "$(P)$(R)PulseGen@PULSE_GEN_NUM@:MapTrigEnabled")
  field(LNK5, "$(P)$(R)PulseGen@PULSE_GEN_NUM@:Polarity")
}

